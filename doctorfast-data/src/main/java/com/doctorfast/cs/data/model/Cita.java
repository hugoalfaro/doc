package com.doctorfast.cs.data.model;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cita generated by hbm2java
 */
@Entity
@Table(name = "cita"
)
public class Cita implements java.io.Serializable {

    private Integer idCita;
    private String codigo;
    private Paciente paciente;
    private Promocion promocion;
    private SedeEspProfesional sedeEspProfesional;
    private Subespecialidad subespecialidad;
    private Date fechaAtencion;
    private String estadoCita;
    private String comentario;
    private Integer tiempoCita;
    private String estado;
    private Integer usCreacion;
    private Date feCreacion;
    private Integer usModificacion;
    private Date feModificacion;

    public Cita() {
    }

    @Id
    @SequenceGenerator(name = "sq_cita_id", sequenceName = "sq_cita_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_cita_id")
    @Column(name = "id_cita", unique = true, nullable = false)
    public Integer getIdCita() {
        return this.idCita;
    }

    public void setIdCita(Integer idCita) {
        this.idCita = idCita;
    }

    @Column(name = "codigo", length = 50)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_paciente", nullable = false)
    public Paciente getPaciente() {
        return this.paciente;
    }

    public void setPaciente(Paciente paciente) {
        this.paciente = paciente;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_promocion")
    public Promocion getPromocion() {
        return this.promocion;
    }

    public void setPromocion(Promocion promocion) {
        this.promocion = promocion;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_subespecialidad")
    public Subespecialidad getSubespecialidad() {
        return subespecialidad;
    }
    
    public void setSubespecialidad(Subespecialidad subespecialidad) {
        this.subespecialidad = subespecialidad;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumns(value = {
        @JoinColumn(name = "id_sede", referencedColumnName = "id_sede", nullable = false),
        @JoinColumn(name = "id_especialidad", referencedColumnName = "id_especialidad", nullable = false),
        @JoinColumn(name = "id_profesional", referencedColumnName = "id_profesional", nullable = false)})
    public SedeEspProfesional getSedeEspProfesional() {
        return sedeEspProfesional;
    }

    public void setSedeEspProfesional(SedeEspProfesional sedeEspProfesional) {
        this.sedeEspProfesional = sedeEspProfesional;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_atencion", length = 35)
    public Date getFechaAtencion() {
        return this.fechaAtencion;
    }

    public void setFechaAtencion(Date fechaAtencion) {
        this.fechaAtencion = fechaAtencion;
    }

    @Column(name = "estado_cita", length = 50)
    public String getEstadoCita() {
        return this.estadoCita;
    }

    public void setEstadoCita(String estadoCita) {
        this.estadoCita = estadoCita;
    }

    @Column(name = "comentario", length = 100)
    public String getComentario() {
        return this.comentario;
    }

    public void setComentario(String comentario) {
        this.comentario = comentario;
    }

    @Column(name = "tiempo_cita")
    public Integer getTiempoCita() {
        return tiempoCita;
    }

    public void setTiempoCita(Integer tiempoCita) {
        this.tiempoCita = tiempoCita;
    }

    @Column(name = "estado", length = 1)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "us_creacion", updatable = false)
    public Integer getUsCreacion() {
        return this.usCreacion;
    }

    public void setUsCreacion(Integer usCreacion) {
        this.usCreacion = usCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @Column(name = "us_modificacion")
    public Integer getUsModificacion() {
        return this.usModificacion;
    }

    public void setUsModificacion(Integer usModificacion) {
        this.usModificacion = usModificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_modificacion", length = 35)
    public Date getFeModificacion() {
        return this.feModificacion;
    }

    public void setFeModificacion(Date feModificacion) {
        this.feModificacion = feModificacion;
    }

    @PrePersist
    protected void onCreate() {
        feCreacion = new Date();
        estado = "1";
    }

    @PreUpdate
    protected void onUpdate() {
        feModificacion = new Date();
    }

}
