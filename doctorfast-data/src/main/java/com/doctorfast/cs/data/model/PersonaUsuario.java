package com.doctorfast.cs.data.model;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PersonaUsuario generated by hbm2java
 */
@Entity
@Table(name = "persona_usuario"
)
public class PersonaUsuario implements java.io.Serializable {

    private Integer idPersonaUsuario;
    private Perfil perfil;
    private String apellidoPaterno;
    private String apellidoMaterno;
    private String nombre;
    private String documentoIdentidad;
    private String tipoDocumento;
    private Date fechaNacimiento;
    private Integer sexo;
    private String telefono;
    private String correo;
    private String usuario;
    private String clave;
    private String estado;
    private Date feCreacion;
    private List<Paciente> pacientes = new ArrayList<>();
    private List<Profesional> profesionals = new ArrayList<>();
    private List<Asistente> asistentes = new ArrayList<>();
    private List<Administrador> administradors = new ArrayList<>();

    public PersonaUsuario() {
    }

    public PersonaUsuario(Integer idPersonaUsuario, Perfil perfil) {
        this.idPersonaUsuario = idPersonaUsuario;
        this.perfil = perfil;
    }

    public PersonaUsuario(Integer idPersonaUsuario, Perfil perfil, String apellidoPaterno, String apellidoMaterno, String nombre, String documentoIdentidad, String tipoDocumento, Date fechaNacimiento, Integer sexo, List<Paciente> pacientes, List<Profesional> profesionals, List<Asistente> asistentes, List<Administrador> administradors) {
        this.idPersonaUsuario = idPersonaUsuario;
        this.perfil = perfil;
        this.apellidoPaterno = apellidoPaterno;
        this.apellidoMaterno = apellidoMaterno;
        this.nombre = nombre;
        this.documentoIdentidad = documentoIdentidad;
        this.tipoDocumento = tipoDocumento;
        this.fechaNacimiento = fechaNacimiento;
        this.sexo = sexo;
        this.pacientes = pacientes;
        this.profesionals = profesionals;
        this.asistentes = asistentes;
        this.administradors = administradors;
    }

    @Id
    @SequenceGenerator(name = "sq_persona_usuario_id", sequenceName = "sq_persona_usuario_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_persona_usuario_id")
    @Column(name = "id_persona_usuario", unique = true, nullable = false)
    public Integer getIdPersonaUsuario() {
        return this.idPersonaUsuario;
    }

    public void setIdPersonaUsuario(Integer idPersonaUsuario) {
        this.idPersonaUsuario = idPersonaUsuario;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_perfil", updatable = false)
    public Perfil getPerfil() {
        return this.perfil;
    }

    public void setPerfil(Perfil perfil) {
        this.perfil = perfil;
    }

    @Column(name = "apellido_paterno", length = 50)
    public String getApellidoPaterno() {
        return this.apellidoPaterno;
    }

    public void setApellidoPaterno(String apellidoPaterno) {
        this.apellidoPaterno = apellidoPaterno;
    }

    @Column(name = "apellido_materno", length = 50)
    public String getApellidoMaterno() {
        return this.apellidoMaterno;
    }

    public void setApellidoMaterno(String apellidoMaterno) {
        this.apellidoMaterno = apellidoMaterno;
    }

    @Column(name = "nombre", length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "documento_identidad", length = 50)
    public String getDocumentoIdentidad() {
        return this.documentoIdentidad;
    }

    public void setDocumentoIdentidad(String documentoIdentidad) {
        this.documentoIdentidad = documentoIdentidad;
    }

    @Column(name = "tipo_documento", length = 50)
    public String getTipoDocumento() {
        return this.tipoDocumento;
    }

    public void setTipoDocumento(String tipoDocumento) {
        this.tipoDocumento = tipoDocumento;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_nacimiento", length = 35)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }

    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    @Column(name = "sexo")
    public Integer getSexo() {
        return this.sexo;
    }

    public void setSexo(Integer sexo) {
        this.sexo = sexo;
    }

    public String getTelefono() {
        return telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    public String getCorreo() {
        return correo;
    }

    public void setCorreo(String correo) {
        this.correo = correo;
    }

    public String getUsuario() {
        return usuario;
    }

    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    public String getClave() {
        return clave;
    }

    public void setClave(String clave) {
        this.clave = clave;
    }

    @Column(name = "estado", updatable = false)
    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaUsuario")
    public List<Paciente> getPacientes() {
        return this.pacientes;
    }

    public void setPacientes(List<Paciente> pacientes) {
        this.pacientes = pacientes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaUsuario")
    public List<Profesional> getProfesionals() {
        return this.profesionals;
    }

    public void setProfesionals(List<Profesional> profesionals) {
        this.profesionals = profesionals;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaUsuario")
    public List<Asistente> getAsistentes() {
        return this.asistentes;
    }

    public void setAsistentes(List<Asistente> asistentes) {
        this.asistentes = asistentes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaUsuario")
    public List<Administrador> getAdministradors() {
        return this.administradors;
    }

    public void setAdministradors(List<Administrador> administradors) {
        this.administradors = administradors;
    }

    @PrePersist
    protected void onCreate() {
        estado = "1";
        feCreacion = new Date();
    }

}
