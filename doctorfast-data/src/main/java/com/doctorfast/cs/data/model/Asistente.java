package com.doctorfast.cs.data.model;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Asistente generated by hbm2java
 */
@Entity
@Table(name = "asistente")
@DynamicUpdate(value = true)
public class Asistente implements java.io.Serializable {

    private Integer idAsistente;
    private Clinica clinica;
    private PersonaUsuario personaUsuario;
    private String estado;
    private Integer usCreacion;
    private Date feCreacion;
    private Integer usModificacion;
    private Date feModificacion;

    public Asistente() {
    }

    public Asistente(Integer idAsistente, Clinica clinica, PersonaUsuario personaUsuario) {
        this.idAsistente = idAsistente;
        this.clinica = clinica;
        this.personaUsuario = personaUsuario;
    }

    public Asistente(Integer idAsistente, Clinica clinica, PersonaUsuario personaUsuario, String estado, Integer usCreacion, Date feCreacion, Integer usModificacion, Date feModificacion) {
        this.idAsistente = idAsistente;
        this.clinica = clinica;
        this.personaUsuario = personaUsuario;
        this.estado = estado;
        this.usCreacion = usCreacion;
        this.feCreacion = feCreacion;
        this.usModificacion = usModificacion;
        this.feModificacion = feModificacion;
    }

    @Id
    @SequenceGenerator(name = "sq_asistente_id", sequenceName = "sq_asistente_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_asistente_id")
    @Column(name = "id_asistente", unique = true, nullable = false)
    public Integer getIdAsistente() {
        return this.idAsistente;
    }

    public void setIdAsistente(Integer idAsistente) {
        this.idAsistente = idAsistente;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_clinica", nullable = false)
    public Clinica getClinica() {
        return this.clinica;
    }

    public void setClinica(Clinica clinica) {
        this.clinica = clinica;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_persona_usuario", nullable = false)
    public PersonaUsuario getPersonaUsuario() {
        return this.personaUsuario;
    }

    public void setPersonaUsuario(PersonaUsuario personaUsuario) {
        this.personaUsuario = personaUsuario;
    }

    @Column(name = "estado", length = 1)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "us_creacion", updatable = false)
    public Integer getUsCreacion() {
        return this.usCreacion;
    }

    public void setUsCreacion(Integer usCreacion) {
        this.usCreacion = usCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @Column(name = "us_modificacion")
    public Integer getUsModificacion() {
        return this.usModificacion;
    }

    public void setUsModificacion(Integer usModificacion) {
        this.usModificacion = usModificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_modificacion", length = 35)
    public Date getFeModificacion() {
        return this.feModificacion;
    }

    public void setFeModificacion(Date feModificacion) {
        this.feModificacion = feModificacion;
    }

    @PrePersist
    protected void onCreate() {
        feCreacion = new Date();
    }

    @PreUpdate
    protected void onUpdate() {
        feModificacion = new Date();
    }

}
