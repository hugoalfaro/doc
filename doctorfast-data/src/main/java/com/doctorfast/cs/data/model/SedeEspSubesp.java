package com.doctorfast.cs.data.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SedeEspSubesp generated by hbm2java
 */
@Entity
@Table(name = "sede_esp_subesp"
)
public class SedeEspSubesp implements java.io.Serializable {

    private SedeEspSubespId id;
    private SedeEspecialidad sedeEspecialidad;
    private Subespecialidad subespecialidad;
    private BigDecimal costo;

    public SedeEspSubesp() {
    }

    public SedeEspSubesp(SedeEspSubespId id, SedeEspecialidad sedeEspecialidad, Subespecialidad subespecialidad) {
        this.id = id;
        this.sedeEspecialidad = sedeEspecialidad;
        this.subespecialidad = subespecialidad;
    }

    @EmbeddedId

    @AttributeOverrides({
        @AttributeOverride(name = "idSede", column = @Column(name = "id_sede", nullable = false)),
        @AttributeOverride(name = "idEspecialidad", column = @Column(name = "id_especialidad", nullable = false)),
        @AttributeOverride(name = "idSubespecialidad", column = @Column(name = "id_subespecialidad", nullable = false))})
    public SedeEspSubespId getId() {
        return this.id;
    }

    public void setId(SedeEspSubespId id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumns({
        @JoinColumn(name = "id_sede", referencedColumnName = "id_sede", nullable = false, insertable = false, updatable = false),
        @JoinColumn(name = "id_especialidad", referencedColumnName = "id_especialidad", nullable = false, insertable = false, updatable = false)})
    public SedeEspecialidad getSedeEspecialidad() {
        return this.sedeEspecialidad;
    }

    public void setSedeEspecialidad(SedeEspecialidad sedeEspecialidad) {
        this.sedeEspecialidad = sedeEspecialidad;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_subespecialidad", nullable = false, insertable = false, updatable = false)
    public Subespecialidad getSubespecialidad() {
        return this.subespecialidad;
    }

    public void setSubespecialidad(Subespecialidad subespecialidad) {
        this.subespecialidad = subespecialidad;
    }

    @Column(name = "costo", precision = 131089, scale = 0)
    public BigDecimal getCosto() {
        return this.costo;
    }

    public void setCosto(BigDecimal costo) {
        this.costo = costo;
    }

}
