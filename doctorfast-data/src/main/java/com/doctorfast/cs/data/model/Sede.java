package com.doctorfast.cs.data.model;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Sede generated by hbm2java
 */
@Entity
@Table(name = "sede"
)
public class Sede implements java.io.Serializable {

    private Integer idSede;
    private Integer codigo;
    private String nombre;
    private String direccion;
    private Ubigeo ubigeo;
    private Clinica clinica;
    private String estado;
    private Integer usCreacion;
    private Date feCreacion;
    private Integer usModificacion;
    private Date feModificacion;
    private List<SedeEspecialidad> sedeEspecialidads = new ArrayList<>();

    public Sede() {
    }

    public Sede(Integer idSede, Clinica clinica) {
        this.idSede = idSede;
        this.clinica = clinica;
    }

    public Sede(Integer idSede, Clinica clinica, String estado, Integer usCreacion, Date feCreacion, Integer usModificacion, Date feModificacion, List<SedeEspecialidad> sedeEspecialidads) {
        this.idSede = idSede;
        this.clinica = clinica;
        this.estado = estado;
        this.usCreacion = usCreacion;
        this.feCreacion = feCreacion;
        this.usModificacion = usModificacion;
        this.feModificacion = feModificacion;
        this.sedeEspecialidads = sedeEspecialidads;
    }

    @Id
    @SequenceGenerator(name = "sq_sede_id", sequenceName = "sq_sede_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_sede_id")
    @Column(name = "id_sede", unique = true, nullable = false)
    public Integer getIdSede() {
        return this.idSede;
    }

    public void setIdSede(Integer idSede) {
        this.idSede = idSede;
    }

    @Column(name = "codigo")
    public Integer getCodigo() {
        return codigo;
    }

    public void setCodigo(Integer codigo) {
        this.codigo = codigo;
    }

    @Column(name = "nombre")
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "direccion")
    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumns({
        @JoinColumn(name = "co_departamento", referencedColumnName = "co_departamento"),
        @JoinColumn(name = "co_provincia", referencedColumnName = "co_provincia"),
        @JoinColumn(name = "co_distrito", referencedColumnName = "co_distrito")
    })
    public Ubigeo getUbigeo() {
        return ubigeo;
    }

    public void setUbigeo(Ubigeo ubigeo) {
        this.ubigeo = ubigeo;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_clinica", nullable = false)
    public Clinica getClinica() {
        return this.clinica;
    }

    public void setClinica(Clinica clinica) {
        this.clinica = clinica;
    }

    @Column(name = "estado", length = 1)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "us_creacion", updatable = false)
    public Integer getUsCreacion() {
        return this.usCreacion;
    }

    public void setUsCreacion(Integer usCreacion) {
        this.usCreacion = usCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @Column(name = "us_modificacion")
    public Integer getUsModificacion() {
        return this.usModificacion;
    }

    public void setUsModificacion(Integer usModificacion) {
        this.usModificacion = usModificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_modificacion", length = 35)
    public Date getFeModificacion() {
        return this.feModificacion;
    }

    public void setFeModificacion(Date feModificacion) {
        this.feModificacion = feModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sede")
    public List<SedeEspecialidad> getSedeEspecialidads() {
        return this.sedeEspecialidads;
    }

    public void setSedeEspecialidads(List<SedeEspecialidad> sedeEspecialidads) {
        this.sedeEspecialidads = sedeEspecialidads;
    }

    @PrePersist
    protected void onCreate() {
        feCreacion = new Date();
    }

}
