package com.doctorfast.cs.data.model;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Profesional generated by hbm2java
 */
@Entity
@Table(name = "profesional")
@DynamicUpdate(value = true)
public class Profesional implements java.io.Serializable {

    private Integer idProfesional;
    private PersonaUsuario personaUsuario;
    private String cop;
    private String colorDisponibilidad;
    private String colorCita;
    private Integer tiempoCita;
    private String estado;
    private Integer usCreacion;
    private Date feCreacion;
    private Integer usModificacion;
    private Date feModificacion;
    private List<SedeEspProfesional> sedeEspProfesionals = new ArrayList<>();
    private Clinica clinica;

    public Profesional() {
    }

    public Profesional(Integer idProfesional, PersonaUsuario personaUsuario) {
        this.idProfesional = idProfesional;
        this.personaUsuario = personaUsuario;
    }

    @Id
    @SequenceGenerator(name = "sq_profesional_id", sequenceName = "sq_profesional_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_profesional_id")
    @Column(name = "id_profesional", unique = true, nullable = false)
    public Integer getIdProfesional() {
        return this.idProfesional;
    }

    public void setIdProfesional(Integer idProfesional) {
        this.idProfesional = idProfesional;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_persona_usuario", nullable = false, updatable = false)
    public PersonaUsuario getPersonaUsuario() {
        return this.personaUsuario;
    }

    public void setPersonaUsuario(PersonaUsuario personaUsuario) {
        this.personaUsuario = personaUsuario;
    }

    @Column(name = "cop", length = 50)
    public String getCop() {
        return this.cop;
    }

    public void setCop(String cop) {
        this.cop = cop;
    }

    @Column(name = "color_disponibilidad", length = 9)
    public String getColorDisponibilidad() {
        return colorDisponibilidad;
    }

    public void setColorDisponibilidad(String colorDisponibilidad) {
        this.colorDisponibilidad = colorDisponibilidad;
    }

    @Column(name = "color_cita", length = 9)
    public String getColorCita() {
        return colorCita;
    }

    public void setColorCita(String colorCita) {
        this.colorCita = colorCita;
    }

    @Column(name = "tiempo_cita")
    public Integer getTiempoCita() {
        return tiempoCita;
    }

    public void setTiempoCita(Integer tiempoCita) {
        this.tiempoCita = tiempoCita;
    }

    @Column(name = "estado", length = 1)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "us_creacion", updatable = false)
    public Integer getUsCreacion() {
        return this.usCreacion;
    }

    public void setUsCreacion(Integer usCreacion) {
        this.usCreacion = usCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @Column(name = "us_modificacion")
    public Integer getUsModificacion() {
        return this.usModificacion;
    }

    public void setUsModificacion(Integer usModificacion) {
        this.usModificacion = usModificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_modificacion", length = 35)
    public Date getFeModificacion() {
        return this.feModificacion;
    }

    public void setFeModificacion(Date feModificacion) {
        this.feModificacion = feModificacion;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "profesional")
    public List<SedeEspProfesional> getSedeEspProfesionals() {
        return this.sedeEspProfesionals;
    }

    public void setSedeEspProfesionals(List<SedeEspProfesional> sedeEspProfesionals) {
        this.sedeEspProfesionals = sedeEspProfesionals;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_clinica", nullable = false)
    public Clinica getClinica() {
        return clinica;
    }

    public void setClinica(Clinica clinica) {
        this.clinica = clinica;
    }

    @PrePersist
    protected void onCreate() {
        feCreacion = new Date();
    }

    @PreUpdate
    protected void onUpdate() {
        feModificacion = new Date();
    }

}
