package com.doctorfast.cs.data.model;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name = "paciente"
)
public class Paciente implements java.io.Serializable {

    private Integer idPaciente;
    private PersonaUsuario personaUsuario;
    private String estado;
    private Integer usCreacion;
    private Date feCreacion;
    private Integer usModificacion;
    private Date feModificacion;
    private List<Cita> citas = new ArrayList<>();

    public Paciente() {
    }

    public Paciente(Integer idPaciente, PersonaUsuario personaUsuario) {
        this.idPaciente = idPaciente;
        this.personaUsuario = personaUsuario;
    }

    public Paciente(Integer idPaciente, PersonaUsuario personaUsuario, String estado, Integer usCreacion, Date feCreacion, Integer usModificacion, Date feModificacion, List<Cita> citas) {
        this.idPaciente = idPaciente;
        this.personaUsuario = personaUsuario;
        this.estado = estado;
        this.usCreacion = usCreacion;
        this.feCreacion = feCreacion;
        this.usModificacion = usModificacion;
        this.feModificacion = feModificacion;
        this.citas = citas;
    }

    @Id
    @SequenceGenerator(name = "sq_paciente_id", sequenceName = "sq_paciente_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_paciente_id")
    @Column(name = "id_paciente", unique = true, nullable = false)
    public Integer getIdPaciente() {
        return this.idPaciente;
    }

    public void setIdPaciente(Integer idPaciente) {
        this.idPaciente = idPaciente;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "id_persona_usuario", nullable = false)
    public PersonaUsuario getPersonaUsuario() {
        return this.personaUsuario;
    }

    public void setPersonaUsuario(PersonaUsuario personaUsuario) {
        this.personaUsuario = personaUsuario;
    }

    @Column(name = "estado", length = 1)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "us_creacion", updatable = false)
    public Integer getUsCreacion() {
        return this.usCreacion;
    }

    public void setUsCreacion(Integer usCreacion) {
        this.usCreacion = usCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @Column(name = "us_modificacion")
    public Integer getUsModificacion() {
        return this.usModificacion;
    }

    public void setUsModificacion(Integer usModificacion) {
        this.usModificacion = usModificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_modificacion", length = 35)
    public Date getFeModificacion() {
        return this.feModificacion;
    }

    public void setFeModificacion(Date feModificacion) {
        this.feModificacion = feModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "paciente")
    public List<Cita> getCitas() {
        return this.citas;
    }

    public void setCitas(List<Cita> citas) {
        this.citas = citas;
    }

}
