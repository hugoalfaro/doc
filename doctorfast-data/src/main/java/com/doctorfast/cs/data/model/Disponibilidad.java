package com.doctorfast.cs.data.model;

import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Disponibilidad generated by hbm2java
 */
@Entity
@Table(name = "disponibilidad"
)
public class Disponibilidad implements java.io.Serializable {

    private Integer idDisponibilidad;
    private SedeEspProfesional sedeEspProfesional;
    private Date fechaInicio;
    private Date fechaFin;
    private Integer repeticionTipo;
    private Integer repeticionCada;
    private String repeticionDias;
    private Date repeticionInicio;
    private Date repeticionFin;
    private Integer repeticionVeces;
    private String estado;
    private Integer usCreacion;
    private Date feCreacion;
    private Integer usModificacion;
    private Date feModificacion;
    private List<DisponibilidadEvento> disponibilidadEventos = new ArrayList<>();

    public Disponibilidad() {
    }

    @Id
    @SequenceGenerator(name = "sq_disponibilidad_id", sequenceName = "sq_disponibilidad_id", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_disponibilidad_id")
    @Column(name = "id_disponibilidad", unique = true, nullable = false)
    public Integer getIdDisponibilidad() {
        return this.idDisponibilidad;
    }

    public void setIdDisponibilidad(Integer idDisponibilidad) {
        this.idDisponibilidad = idDisponibilidad;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumns({
        @JoinColumn(name = "id_sede", referencedColumnName = "id_sede", nullable = false),
        @JoinColumn(name = "id_especialidad", referencedColumnName = "id_especialidad", nullable = false),
        @JoinColumn(name = "id_profesional", referencedColumnName = "id_profesional", nullable = false)})
    public SedeEspProfesional getSedeEspProfesional() {
        return sedeEspProfesional;
    }

    public void setSedeEspProfesional(SedeEspProfesional sedeEspProfesional) {
        this.sedeEspProfesional = sedeEspProfesional;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_inicio", length = 35)
    public Date getFechaInicio() {
        return this.fechaInicio;
    }

    public void setFechaInicio(Date fechaInicio) {
        this.fechaInicio = fechaInicio;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fecha_fin", length = 35)
    public Date getFechaFin() {
        return this.fechaFin;
    }

    public void setFechaFin(Date fechaFin) {
        this.fechaFin = fechaFin;
    }

    @Column(name = "repeticion_tipo")
    public Integer getRepeticionTipo() {
        return this.repeticionTipo;
    }

    public void setRepeticionTipo(Integer repeticionTipo) {
        this.repeticionTipo = repeticionTipo;
    }

    @Column(name = "repeticion_cada")
    public Integer getRepeticionCada() {
        return this.repeticionCada;
    }

    public void setRepeticionCada(Integer repeticionCada) {
        this.repeticionCada = repeticionCada;
    }

    @Column(name = "repeticion_dias", length = 50)
    public String getRepeticionDias() {
        return this.repeticionDias;
    }

    public void setRepeticionDias(String repeticionDias) {
        this.repeticionDias = repeticionDias;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "repeticion_inicio", length = 35)
    public Date getRepeticionInicio() {
        return this.repeticionInicio;
    }

    public void setRepeticionInicio(Date repeticionInicio) {
        this.repeticionInicio = repeticionInicio;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "repeticion_fin", length = 35)
    public Date getRepeticionFin() {
        return this.repeticionFin;
    }

    public void setRepeticionFin(Date repeticionFin) {
        this.repeticionFin = repeticionFin;
    }

    @Column(name = "repeticion_veces")
    public Integer getRepeticionVeces() {
        return this.repeticionVeces;
    }

    public void setRepeticionVeces(Integer repeticionVeces) {
        this.repeticionVeces = repeticionVeces;
    }

    @Column(name = "estado", length = 1)
    public String getEstado() {
        return this.estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    @Column(name = "us_creacion", updatable = false)
    public Integer getUsCreacion() {
        return this.usCreacion;
    }

    public void setUsCreacion(Integer usCreacion) {
        this.usCreacion = usCreacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_creacion", length = 35, updatable = false)
    public Date getFeCreacion() {
        return this.feCreacion;
    }

    public void setFeCreacion(Date feCreacion) {
        this.feCreacion = feCreacion;
    }

    @Column(name = "us_modificacion")
    public Integer getUsModificacion() {
        return this.usModificacion;
    }

    public void setUsModificacion(Integer usModificacion) {
        this.usModificacion = usModificacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "fe_modificacion", length = 35)
    public Date getFeModificacion() {
        return this.feModificacion;
    }

    public void setFeModificacion(Date feModificacion) {
        this.feModificacion = feModificacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "disponibilidad")
    public List<DisponibilidadEvento> getDisponibilidadEventos() {
        return this.disponibilidadEventos;
    }

    public void setDisponibilidadEventos(List<DisponibilidadEvento> disponibilidadEventos) {
        this.disponibilidadEventos = disponibilidadEventos;
    }

    @PrePersist
    protected void onCreate() {
        estado = "1";
        feCreacion = new Date();
    }

    @PreUpdate
    protected void onUpdate() {
        feModificacion = new Date();
    }

}
